{"version":3,"sources":["documents/photo_cropped_circle.png","documents/Arjun Luthra Resume.pdf","components/landingpage.js","components/projects.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","style","width","margin","className","col","src","avatar","alt","paddingTop","href","pdf","target","rel","to","aria-hidden","title","class","Component","Projects","props","state","activeTab","shadow","minWidth","minHeight","color","height","background","border","colored","Main","exact","path","component","App","scroll","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.81e697e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/photo_cropped_circle.d6fe1c58.png\";","export default __webpack_public_path__ + \"static/media/Arjun Luthra Resume.7ed83a89.pdf\";","import React, { Component } from 'react'\nimport { Grid, Cell, List, ListItem, ListItemContent } from 'react-mdl'\nimport {Link} from 'react-router-dom'\nimport avatar from './../documents/photo_cropped_circle.png'\nimport pdf from './../documents/Arjun Luthra Resume.pdf'\n\n\nclass LandingPage extends Component{\n\n    render() {\n        return (\n\n            <div style={{width: '100%', margin:'auto'}}>\n                <Grid className='landing-grid'>\n                    <Cell col={12}>\n                        <img \n                            src={avatar}\n                            alt=\"avatar\"\n                            className=\"avatar-img\"\n                        />\n                    </Cell>\n                    <Cell col={6}>\n\n                        <h2>About Me</h2>\n                        <hr></hr>\n                        <p style={{width:'75%', margin:'auto', paddingTop:'1em'}}>\n                            \n                            Hello, and welcome to my personal website. <br/><br/>\n\n                            My name is Arjun Luthra and I am currently working as a Software Developer under the Consumer Devices and IoT team at Bell Mobility. <br/><br/>\n                            \n                            I graduated from the University of Toronto majoring in Computer Science with a minor in Statistics as of May 2020. <br/><br/>\n                            \n                            I'm a software engineer with full-stack experience, including React (web and native), Java (object oriented prgramming),\n                            Python (general scripting and automation), as well as some Computer Networking (TCP/IP). <br/><br/>\n\n                            Please feel free to take a look at my \n\n                            <a href={pdf} target=\"_blank\" rel=\"noopener noreferrer\">resume</a>\n\n                            or past \n\n                            <Link to=\"/projects\">projects</Link>\n                            \n                            and if you have any further questions, do not hesitate to send me an\n\n                            <a href=\"mailto:arjun.luthra@mail.utoronto.ca\">email.</a>    \n\n                        </p>\n                    </Cell>\n                    <Cell col={6}>\n                        <h2>Contact Me</h2>\n                        <hr></hr>\n                        <div className=\"contact-list\">\n                            <List>\n\n                                <ListItem>\n                                    <ListItemContent>\n                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"/>\n                                        <a href=\"mailto:arjun.luthra@mail.utoronto.ca\">\n                                            arjun.luthra@mail.utoronto.ca\n                                        </a>\n                                    </ListItemContent>\n                                </ListItem>\n\n                                <div className=\"social\">\n                                <ListItem>\n                                    <ListItemContent>\n                                        <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\"/>\n                                        <a href=\"https://www.linkedin.com/in/arjun-luthra\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Linkedin\">\n                                            linkedin.com/in/arjun-luthra/\n                                        </a>\n                                    </ListItemContent>\n                                </ListItem>   \n                                 \n                                <ListItem>\n                                    {/* Github */}\n                                    <a href=\"https://github.com/Arjun96\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Devpost\">\n                                        <i class=\"fa fa-github-square\"  aria-hidden=\"true\"/>\n                                        github.com/Arjun96\n                                    </a>\n                                </ListItem>\n                                </div>\n\n                                <ListItem>\n                                    {/* Devpost */}\n                                    <a href=\"https://devpost.com/ArjunL\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Devpost\">\n                                        <i class=\"fa fa-code\"  aria-hidden=\"true\"/>\n                                        devpost.com/ArjunL\n                                    </a>\n                                </ListItem>\n\n                            </List>\n                        </div>\n                    </Cell>\n                    <br/> <br/> <br/>\n                    <strong>Copyright &copy; Arjun Luthra 2020</strong>\n                    <br/> <br/> <br/>\n                </Grid>\n\n            </div>\n        )\n    }\n}\n\nexport default LandingPage;","import React, { Component } from 'react'\nimport {Grid, Cell,Card, CardTitle, CardActions, Button, CardText} from 'react-mdl';\n\nclass Projects extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {activeTab:0};\n    }\n\n    render() {\n        return(\n            <div className=\"category-tabs\">\n\n                <br></br>\n                <br></br>\n                \n                <h1>Past Projects</h1>\n\n                <Grid>\n                    <Cell col={12}>\n                        <div className=\"projects-grid\">\n\n                            {/* Personal Website */}\n                            <Card shadow={5} style={{minWidth:'450', minHeight:'400px', margin: 'auto'}}>\n                                <CardTitle style={{color:'#fff', height: '176px', \n                                background: 'url(https://ngninja.com/assets/posts/reactjs-102f9693a4201e678d5b02185717f4e2127d082c2f8afc0ed378cfc6cd814741.png) center / cover'}}>\n                                    Personal Website\n                                </CardTitle>\n                                <CardText> This website was created so that I have a place that I can showcase my portfolio as a Software Engineer.\n                                </CardText>\n                                <CardText>August 2020</CardText>\n                                <CardActions border>\n                                    {/* Personal Website Github */}\n                                    <a href='https://github.com/Arjun96/Arjun96.github.io' target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <Button colored>\n                                            Github </Button>\n                                    </a>\n                                </CardActions>\n                            </Card>\n\n                            <br/> <br/>\n\n                            {/* Facetag */}\n                            <Card shadow={5} style={{minWidth:'450', minHeight:'400px', margin: 'auto'}}>\n                                <CardTitle style={{color:'#000000', height: '176px', \n                                background: 'url(https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_thumbnail_photos/000/362/192/datas/medium.jpg) center / cover'}}>\n                                    Facetag\n                                </CardTitle>\n                                <CardText> An Android App that allows the user to scan a person's face and receive their social media profiles.\n                                </CardText>\n                                <CardText>March 2016</CardText>\n                                <CardActions border>\n                                    {/* Facetag Github */}\n                                    <a href='https://github.com/Arjun96/Nhacks' target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <Button colored>Github</Button>\n                                    </a>\n                                    {/* Facetag Devpost */}\n                                    <a href='https://devpost.com/software/facetag-pmuhy0' target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <Button colored>\n                                            Devpost </Button>\n                                    </a>\n                                </CardActions>\n                            </Card>\n                            \n                            <br/> <br/>\n\n                            {/* Magicam */}\n                            <Card shadow={5} style={{minWidth:'450', minHeight:'400px', margin: 'auto'}}>\n                                <CardTitle style={{color:'#fff', height: '176px', \n                                background: 'url(https://devpost-challengepost.netdna-ssl.com/assets/defaults/thumbnail-placeholder-42bcab8d8178b413922ae2877d8b0868.gif) center / cover'}}>\n                                    Magicam\n                                </CardTitle>\n                                <CardText> An iOS app that allows the user to impose videos on top of real world objects. \n                                </CardText>\n                                <br></br>\n                                <CardText>November 2015</CardText>\n                                <CardActions border>\n                                    {/* Magicam Devpost */}\n                                    <a href='https://devpost.com/software/magicam-9ij0zr' target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <Button colored>\n                                            Devpost </Button>\n                                    </a>\n                                    {/* Magicam Youtube Link #1 */}\n                                    <a href='https://www.youtube.com/watch?v=4o74Fb1uQYc' target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <Button colored>Demo 1</Button>\n                                    </a>\n                                    {/* Magicam Youtube Link #2 */}\n                                    <a href='https://www.youtube.com/watch?v=xpLB4pwLOMk' target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <Button colored>Demo 2</Button>\n                                    </a>\n                                </CardActions>\n                            </Card>\n                        </div>\n                        <strong>Copyright &copy; Arjun Luthra 2020</strong>\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Projects;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport LandingPage from './landingpage';\nimport Projects from './projects';\n\n//Settings the routes to each of the different pages\nconst Main = () => (\n\n    <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route path=\"/projects\" component={Projects} />\n    </Switch>\n\n\n)\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport Main from './components/main';\nimport {Link, HashRouter} from 'react-router-dom'\nimport pdf from './documents/Arjun Luthra Resume.pdf'\n\nfunction App() {\n  return (\n    <HashRouter>\n    <div className=\"App\">\n        <Layout>\n          <Header className=\"header-color\" title=\"Arjun Luthra\" scroll>\n            <Navigation className=\"navigation-links\">\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <a href={pdf} target=\"_blank\" rel=\"noopener noreferrer\">Resume</a>\n            </Navigation>\n          </Header>\n          <Drawer title=\"Arjun Luthra\">\n              <Navigation>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <a href={pdf} target=\"_blank\" rel=\"noopener noreferrer\">Resume</a>\n              </Navigation>\n          </Drawer>\n          <Content>\n              <div className=\"page-content\" />\n              <Main></Main>\n          </Content>\n        </Layout>\n    </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}